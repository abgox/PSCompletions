{
  "root": [
    {
      "name": "create",
      "tip": [
        "Create a project from a create-* or @foo/create-* starter kit.\n",
        "E: create vite@latest   --- create a vite project"
      ],
      "next": [
        {
          "name": "vite@latest",
          "tip": [
            "Create a vite project"
          ]
        },
        {
          "name": "vue@latest",
          "tip": [
            "Create a vue project"
          ]
        }
      ]
    },
    {
      "name": "install",
      "alias": [
        "i"
      ],
      "tip": [
        "U: install|i\n",
        "Install all dependencies for a project"
      ]
    },
    {
      "name": "add",
      "tip": [
        "U: add [options] <package>[@<version>]\n",
        "Add a package and any packages that it depends on",
        "By default, any new package is installed as a prod dependency",
        "E: add -D sass"
      ],
      "options": [
        {
          "name": "--global",
          "alias": [
            "-g"
          ],
          "tip": [
            "U: -g|--global\n",
            "Add a package globally"
          ]
        },
        {
          "name": "--save-prod",
          "alias": [
            "-P"
          ],
          "tip": [
            "U: -P|--save-prod\n",
            "(Default)Install the specified packages as regular dependencies"
          ]
        },
        {
          "name": "--save-dev",
          "alias": [
            "-D"
          ],
          "tip": [
            "U: -D|--save-dev\n",
            "Install the specified packages as devDependencies"
          ]
        },
        {
          "name": "--save-optional",
          "alias": [
            "-O"
          ],
          "tip": [
            "U: -O|--save-optional\n",
            "Install the specified packages as optionalDependencies"
          ]
        },
        {
          "name": "--save-exact",
          "alias": [
            "-E"
          ],
          "tip": [
            "U: -E|--save-exact\n",
            "Saved dependencies will be configured with an exact version rather than using pnpm's default semver range operator"
          ]
        },
        {
          "name": "--save-peer",
          "tip": [
            "Add one or more packages to peerDependencies and install them as dev dependencies"
          ]
        },
        {
          "name": "--workspace",
          "alias": [
            "-w"
          ],
          "tip": [
            "Only adds the new dependency if it is found in the workspace"
          ]
        }
      ]
    },
    {
      "name": "remove",
      "alias": [
        "rm"
      ],
      "tip": [
        "U: remove|rm\n",
        "Removes packages from node_modules and from the projects package.json"
      ],
      "options": [
        {
          "name": "--global",
          "alias": [
            "-g"
          ],
          "tip": [
            "U: -g|--global\n",
            "Remove globally"
          ]
        }
      ]
    },
    {
      "name": "list",
      "alias": [
        "ls"
      ],
      "tip": [
        "U: list|ls\n",
        "Print all the versions of packages that are installed, as well as their dependencies, in a tree-structure"
      ],
      "options": [
        {
          "name": "--global",
          "alias": [
            "-g"
          ],
          "tip": [
            "U: -g|--global\n",
            "List globally"
          ]
        }
      ]
    },
    {
      "name": "update",
      "alias": [
        "up",
        "upgrade"
      ],
      "tip": [
        "U: update, up, upgrade\n",
        "Update packages to their latest version based on the specified range\n",
        "When used without arguments, updates all dependencies"
      ],
      "options": [
        {
          "name": "--global",
          "alias": [
            "-g"
          ],
          "tip": [
            "U: -g|--global\n",
            "Update globally"
          ]
        }
      ]
    },
    {
      "name": "outdated",
      "tip": [
        "Check for outdated packages"
      ]
    },
    {
      "name": "import",
      "tip": [
        "Generates a pnpm-lock.yaml from an npm package-lock.json (or npm-shrinkwrap.json) file"
      ]
    },
    {
      "name": "install-test",
      "alias": [
        "it"
      ],
      "tip": [
        "U: install-test|it\n",
        "Runs a pnpm install followed immediately by a pnpm test"
      ]
    },
    {
      "name": "link",
      "alias": [
        "ln"
      ],
      "tip": [
        "U: link|ln\n",
        "Connect the local project to another one"
      ]
    },
    {
      "name": "prune",
      "tip": [
        "Removes extraneous packages"
      ]
    },
    {
      "name": "rebuild",
      "alias": [
        "rb"
      ],
      "tip": [
        "U: rebuild|rb\n",
        "Rebuild a package"
      ]
    },
    {
      "name": "unlink",
      "tip": [
        "Unlinks a package. Like yarn unlink but pnpm re-installs the dependency after removing the external link"
      ]
    },
    {
      "name": "audit",
      "tip": [
        "Checks for known security issues with the installed packages"
      ]
    },
    {
      "name": "licenses",
      "tip": [
        "Check licenses in consumed packages"
      ]
    },
    {
      "name": "exec",
      "tip": [
        "Executes a shell command in scope of a project"
      ]
    },
    {
      "name": "run",
      "tip": [
        "Runs a defined package script"
      ],
      "next": []
    },
    {
      "name": "start",
      "tip": [
        "Runs an arbitrary command specified in the package's \"start\" property of its \"scripts\" object"
      ]
    },
    {
      "name": "test",
      "alias": [
        "t"
      ],
      "tip": [
        "U: test|t\n",
        "Runs a package's \"test\" script, if one was provided"
      ]
    },
    {
      "name": "cat-file",
      "tip": [
        "Prints the contents of a file based on the hash value stored in the index file"
      ]
    },
    {
      "name": "cat-index",
      "tip": [
        "Prints the index file of a specific package from the store"
      ]
    },
    {
      "name": "find-hash",
      "tip": [
        "Experimental! Lists the packages that include the file with the specified hash"
      ]
    },
    {
      "name": "pack",
      "tip": [
        "Create a tarball from a package"
      ]
    },
    {
      "name": "publish",
      "tip": [
        "Publishes a package to the registry"
      ]
    },
    {
      "name": "root",
      "tip": [
        "Prints the effective modules directory"
      ]
    },
    {
      "name": "store",
      "tip": [
        "Reads and performs actions on pnpm store that is on the current filesystem"
      ],
      "next": [
        {
          "name": "add",
          "tip": [
            "Adds new packages to the pnpm store directly\n",
            "Does not modify any projects or files outside the store"
          ]
        },
        {
          "name": "path",
          "tip": [
            "Prints the path to the active store directory"
          ]
        },
        {
          "name": "prune",
          "tip": [
            "Removes unreferenced (extraneous, orphan) packages from the store"
          ],
          "options": [
            {
              "name": "--force",
              "tip": [
                "If there are alien directories in the store, this command removes them\n",
                "Alien directories are directories/files that were not created by the package manager"
              ]
            }
          ]
        },
        {
          "name": "status",
          "tip": [
            "Checks for modified packages in the store"
          ]
        }
      ]
    }
  ],
  "options": [
    {
      "name": "--help",
      "alias": [
        "-h"
      ],
      "tip": [
        "U: --help|-h\n",
        "Print this help message"
      ]
    },
    {
      "name": "--version",
      "alias": [
        "-v"
      ],
      "tip": [
        "U: --version|-v\n",
        "Print the current version of pnpm"
      ]
    }
  ],
  "info": {
    "completion_info": {
      "url": "https://pnpm.io/",
      "description": [
        "pnpm - Package Manager."
      ]
    }
  }
}
