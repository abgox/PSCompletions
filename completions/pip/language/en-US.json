{
  "root": [
    {
      "name": "install",
      "alias": [
        "download"
      ],
      "tip": "Install/Download packages.",
      "options": [
        {
          "name": "--requirement",
          "alias": [
            "-r"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__requirement }}"
        },
        {
          "name": "--constraint",
          "alias": [
            "-c"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__constraint }}"
        },
        {
          "name": "--no-deps",
          "tip": "{{ $info.__no_deps }}"
        },
        {
          "name": "--pre",
          "tip": "{{ $info.__pre }}"
        },
        {
          "name": "__editable",
          "alias": [
            "-e"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__editable }}"
        },
        {
          "name": "--dry-run",
          "tip": [
            "Don't actually install anything, just print what would be.\n",
            "Can be used in combination with --ignore-installed to 'resolve' the requirements."
          ]
        },
        {
          "name": "--target",
          "alias": [
            "-t"
          ],
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: -t|--target <dir>\n",
            "Install packages into the given directory.\n",
            "By default this will not replace existing files/folders in the given directory.\n",
            "Use --upgrade to replace existing packages in the given directory with new versions."
          ]
        },
        {
          "name": "--platform",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__platform }}"
        },
        {
          "name": "--python-version",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__python_version }}"
        },
        {
          "name": "--implementation",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__implementation }}"
        },
        {
          "name": "--abi",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__abi }}"
        },
        {
          "name": "--user",
          "tip": [
            "Install to the Python user install directory for your platform.\n",
            "Typically ~/.local/, or %APPDATA%\\Python on Windows.\n",
            "(See the Python documentation for site.USER_BASE for full details.)"
          ]
        },
        {
          "name": "--root",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__root }}"
        },
        {
          "name": "--prefix",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --prefix <dir>\n",
            "Installation prefix where lib, bin and other top-level folders are placed"
          ]
        },
        {
          "name": "--src",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__src }}"
        },
        {
          "name": "--upgrade",
          "alias": [
            "-U"
          ],
          "tip": [
            "U: -U|--upgrade\n",
            "Upgrade all specified packages to the newest available version.\n",
            "The handling of dependencies depends on the upgrade-strategy used."
          ]
        },
        {
          "name": "--upgrade-strategy",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --upgrade-strategy <upgrade_strategy>\n",
            "Determines how dependency upgrading should be handled [default: only-if-needed].\n",
            "\"eager\"          - dependencies are upgraded regardless of whether the currently installed version satisfies the requirements of the upgraded package(s).\n",
            "\"only-if-needed\" - are upgraded only when they do not satisfy the requirements of the upgraded package(s)."
          ]
        },
        {
          "name": "--force-reinstall",
          "tip": "Reinstall all packages even if they are already up-to-date."
        },
        {
          "name": "--ignore-installed",
          "alias": [
            "-I"
          ],
          "tip": [
            "U: -I|--ignore-installed\n",
            "Ignore the installed packages, overwriting them.\n",
            "This can break your system if the existing package is of a different version or was installed with a different package manager!"
          ]
        },
        {
          "name": "--ignore-requires-python",
          "tip": "{{ $info.__ignore_requires_python }}"
        },
        {
          "name": "--no-build-isolation",
          "tip": "{{ $info.__no_build_isolation }}"
        },
        {
          "name": "--use-pep517",
          "tip": "{{ $info.__use_pep517 }}"
        },
        {
          "name": "--check-build-dependencies",
          "tip": "{{ $info.__check_build_dependencies }}"
        },
        {
          "name": "--config-settings",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__config_settings }}"
        },
        {
          "name": "--install-option",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --install-option <options>\n",
            "Extra arguments to be supplied to the setup.py install command (use like --install-option=\"--install-scripts=/usr/local/bin\").\n",
            "You can use multiple --install-option options to pass multiple options to setup.py install.\n",
            "If you are using an option with a directory path, be sure to use absolute path."
          ]
        },
        {
          "name": "--global-option",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__global_option }}"
        },
        {
          "name": "--compile",
          "tip": "Compile Python source files to bytecode."
        },
        {
          "name": "--no-compile",
          "tip": "Don't compile Python source files to bytecode."
        },
        {
          "name": "--no-warn-script-location",
          "tip": "Don't warn when installing scripts outside PATH."
        },
        {
          "name": "--no-warn-conflicts",
          "tip": "Don't warn about broken dependencies."
        },
        {
          "name": "--no-binary",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__no_binary }}"
        },
        {
          "name": "--only-binary",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__only_binary }}"
        },
        {
          "name": "--prefer-binary",
          "tip": "{{ $info.__prefer_binary }}"
        },
        {
          "name": "--require-hashes",
          "tip": "{{ $info.__require_hashes }}"
        },
        {
          "name": "--progress-bar",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__progress_bar }}"
        },
        {
          "name": "--root-user-action",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__root_user_action }}"
        },
        {
          "name": "--report",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__report }}"
        },
        {
          "name": "--no-clean",
          "tip": "{{ $info.__no_clean }}"
        },
        {
          "name": "--index-url",
          "alias": [
            "-i"
          ],
          "tip": "{{ $info.__index_url }}"
        },
        {
          "name": "--extra-index-url",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__extra_index_url }}"
        },
        {
          "name": "--no-index",
          "tip": "{{ $info.__no_index }}"
        },
        {
          "name": "--find-links",
          "alias": [
            "-f"
          ],
          "tip": "{{ $info.__find_links }}"
        },
        {
          "name": "--dest",
          "alias": [
            "-d"
          ],
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: -d|--dest <dir>\n",
            "Download packages into <dir>."
          ]
        }
      ]
    },
    {
      "name": "uninstall",
      "tip": "Uninstall packages.",
      "options": [
        {
          "name": "--requirement",
          "alias": [
            "-r"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__requirement }}"
        },
        {
          "name": "--yes",
          "alias": [
            "-y"
          ],
          "tip": "Don't ask for confirmation of uninstall deletions."
        },
        {
          "name": "--root-user-action",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__root_user_action }}"
        }
      ]
    },
    {
      "name": "list",
      "tip": "List installed packages.",
      "options": [
        {
          "name": "--outdated",
          "alias": [
            "-o"
          ],
          "tip": "List outdated packages."
        },
        {
          "name": "--uptodate",
          "alias": [
            "-u"
          ],
          "tip": "List uptodate packages."
        },
        {
          "name": "--editable",
          "alias": [
            "-e"
          ],
          "tip": "List editable projects."
        },
        {
          "name": "--local",
          "alias": [
            "-l"
          ],
          "tip": "{{ $info.__local }}"
        },
        {
          "name": "--user",
          "tip": "{{ $info.__user }}"
        },
        {
          "name": "--path",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__path }}"
        },
        {
          "name": "--pre",
          "tip": "{{ $info.__pre }}"
        },
        {
          "name": "--format",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --format <format>\n",
            "Select the output format among: columns (default), freeze, or json"
          ],
          "next": [
            {
              "name": "columns",
              "tip": "default value"
            },
            {
              "name": "freeze"
            },
            {
              "name": "json"
            }
          ]
        },
        {
          "name": "--not-required",
          "tip": "List packages that are not dependencies of installed packages."
        },
        {
          "name": "--exclude-editable",
          "tip": "{{ $info.__exclude_editable }}"
        },
        {
          "name": "--include-editable",
          "tip": "Include editable package from output."
        },
        {
          "name": "--exclude",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__exclude }}"
        },
        {
          "name": "--index-url",
          "alias": [
            "-i"
          ],
          "tip": "{{ $info.__index_url }}"
        },
        {
          "name": "--extra-index-url",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__extra_index_url }}"
        },
        {
          "name": "--no-index",
          "tip": "{{ $info.__no_index }}"
        },
        {
          "name": "--find-links",
          "alias": [
            "-f"
          ],
          "tip": "{{ $info.__find_links }}"
        }
      ]
    },
    {
      "name": "freeze",
      "tip": [
        "Output installed packages in requirements format.\n",
        "packages are listed in a case-insensitive sorted order."
      ],
      "options": [
        {
          "name": "--requirement",
          "alias": [
            "-r"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__requirement }}"
        },
        {
          "name": "--local",
          "alias": [
            "-l"
          ],
          "tip": "{{ $info.__local }}"
        },
        {
          "name": "--user",
          "tip": "{{ $info.__user }}"
        },
        {
          "name": "--path",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__path }}"
        },
        {
          "name": "--all",
          "tip": "Do not skip these packages in the output: wheel, pip, setuptools, distribute"
        },
        {
          "name": "--exclude-editable",
          "tip": "{{ $info.__exclude_editable }}"
        },
        {
          "name": "--exclude",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__exclude }}"
        }
      ]
    },
    {
      "name": "inspect",
      "tip": "Inspect the content of a Python environment and produce a report in JSON format.",
      "options": [
        {
          "name": "--local",
          "alias": [
            "-l"
          ],
          "tip": "{{ $info.__local }}"
        },
        {
          "name": "--user",
          "tip": "{{ $info.__user }}"
        },
        {
          "name": "--path",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__path }}"
        }
      ]
    },
    {
      "name": "show",
      "tip": [
        "Show information about installed packages.\n",
        "The output is in RFC-compliant mail header format."
      ],
      "options": [
        {
          "name": "--files",
          "alias": [
            "-f"
          ],
          "tip": "Show the full list of installed files for each package."
        }
      ]
    },
    {
      "name": "check",
      "tip": "Verify installed packages have compatible dependencies."
    },
    {
      "name": "config",
      "tip": "Manage local and global configuration.",
      "options": [
        {
          "name": "--editor",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --editor <editor>\n",
            "Editor to use to edit the file.\n",
            "Uses VISUAL or EDITOR environment variables if not provided."
          ]
        },
        {
          "name": "--global",
          "tip": "Use the system-wide configuration file only."
        },
        {
          "name": "--user",
          "tip": "Use the user configuration file only."
        },
        {
          "name": "--site",
          "tip": "Use the current environment configuration file only."
        }
      ],
      "next": [
        {
          "name": "list",
          "tip": "List the active configuration (or from the file specified)"
        },
        {
          "name": "edit",
          "tip": "Edit the configuration file in an editor."
        },
        {
          "name": "get",
          "tip": "Get the value associated with command.option"
        },
        {
          "name": "set",
          "tip": "Set the command.option=value"
        },
        {
          "name": "unset",
          "tip": "Unset the value associated with command.option"
        },
        {
          "name": "debug",
          "tip": "List the configuration files and values defined under them."
        }
      ]
    },
    {
      "name": "search",
      "tip": "Search PyPI for packages.",
      "options": [
        {
          "name": "--index",
          "alias": [
            "-i"
          ],
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: -i|--index <url>\n",
            "Base URL of Python Package Index (default https://pypi.org/pypi)"
          ]
        }
      ]
    },
    {
      "name": "cache",
      "tip": "Inspect and manage pip's wheel cache.",
      "next": [
        {
          "name": "dir",
          "tip": "Show the cache directory."
        },
        {
          "name": "info",
          "tip": "Show information about the cache."
        },
        {
          "name": "list",
          "tip": [
            "U: list [<pattern>] [--format=[human, abspath]]\n",
            "List filenames of packages stored in the cache.\n",
            "<pattern> can be a glob expression or a package name."
          ],
          "options": [
            {
              "name": "--format",
              "tip": "Select the output format among: human (default) or abspath."
            }
          ]
        },
        {
          "name": "remove",
          "tip": "Remove one or more package from the cache."
        },
        {
          "name": "purge",
          "tip": "Remove all items from the cache."
        }
      ]
    },
    {
      "name": "index",
      "tip": "Inspect information available from package indexes.",
      "options": [
        {
          "name": "--pre",
          "tip": "{{ $info.__pre }}"
        },
        {
          "name": "--platform",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__platform }}"
        },
        {
          "name": "--python-version",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__python_version }}"
        },
        {
          "name": "--implementation",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__implementation }}"
        },
        {
          "name": "--abi",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__abi }}"
        },
        {
          "name": "--ignore-requires-python",
          "tip": "{{ $info.__ignore_requires_python }}"
        },
        {
          "name": "--no-binary",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__no_binary }}"
        },
        {
          "name": "--only-binary",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__only_binary }}"
        },
        {
          "name": "--index-url",
          "alias": [
            "-i"
          ],
          "tip": "{{ $info.__index_url }}"
        },
        {
          "name": "--extra-index-url",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__extra_index_url }}"
        },
        {
          "name": "--no-index",
          "tip": "{{ $info.__no_index }}"
        },
        {
          "name": "--find-links",
          "alias": [
            "-f"
          ],
          "tip": "{{ $info.__find_links }}"
        }
      ]
    },
    {
      "name": "wheel",
      "tip": "Build Wheel archives for your requirements and dependencies.",
      "options": [
        {
          "name": "--wheel-dir",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --wheel-dir|-w <dir>\n",
            "Build wheels into <dir>, where the default is the current working directory."
          ]
        },
        {
          "name": "--requirement",
          "alias": [
            "-r"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__requirement }}"
        },
        {
          "name": "--constraint",
          "alias": [
            "-c"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__constraint }}"
        },
        {
          "name": "--no-deps",
          "tip": "{{ $info.__no_deps }}"
        },
        {
          "name": "--pre",
          "tip": "{{ $info.__pre }}"
        },
        {
          "name": "__editable",
          "alias": [
            "-e"
          ],
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__editable }}"
        },
        {
          "name": "--src",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__src }}"
        },
        {
          "name": "--ignore-requires-python",
          "tip": "{{ $info.__ignore_requires_python }}"
        },
        {
          "name": "--no-build-isolation",
          "tip": "{{ $info.__no_build_isolation }}"
        },
        {
          "name": "--use-pep517",
          "tip": "{{ $info.__use_pep517 }}"
        },
        {
          "name": "--check-build-dependencies",
          "tip": "{{ $info.__check_build_dependencies }}"
        },
        {
          "name": "--config-settings",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__config_settings }}"
        },
        {
          "name": "--global-option",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__global_option }}"
        },
        {
          "name": "--no-binary",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__no_binary }}"
        },
        {
          "name": "--only-binary",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__only_binary }}"
        },
        {
          "name": "--prefer-binary",
          "tip": "{{ $info.__prefer_binary }}"
        },
        {
          "name": "--require-hashes",
          "tip": "{{ $info.__require_hashes }}"
        },
        {
          "name": "--progress-bar",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__progress_bar }}"
        },
        {
          "name": "--no-clean",
          "tip": "{{ $info.__no_clean }}"
        },
        {
          "name": "--index-url",
          "alias": [
            "-i"
          ],
          "tip": "{{ $info.__index_url }}"
        },
        {
          "name": "--extra-index-url",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__extra_index_url }}"
        },
        {
          "name": "--no-index",
          "tip": "{{ $info.__no_index }}"
        },
        {
          "name": "--find-links",
          "alias": [
            "-f"
          ],
          "tip": "{{ $info.__find_links }}"
        },
        {
          "name": "--no-verify",
          "tip": "Don't verify if built wheel is valid."
        },
        {
          "name": "--build-option",
          "symbol": "WriteSpaceTab",
          "tip": [
            "U: --build-option <options>\n",
            "Extra arguments to be supplied to 'setup.py bdist_wheel'."
          ]
        }
      ]
    },
    {
      "name": "hash",
      "tip": [
        "Compute hashes of package archives.\n",
        "These can be used with --hash in a requirements file to do repeatable installs."
      ],
      "options": [
        {
          "name": "--algorithm",
          "alias": [
            "-a"
          ],
          "tip": [
            "U: --algorithm|-a <algorithm>\n",
            "The hash algorithm to use: one of sha256, sha384, sha512"
          ],
          "next": [
            {
              "name": "sha256"
            },
            {
              "name": "sha384"
            },
            {
              "name": "sha512"
            }
          ]
        }
      ]
    },
    {
      "name": "debug",
      "tip": "Show information useful for debugging.",
      "options": [
        {
          "name": "--platform",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__platform }}"
        },
        {
          "name": "--python-version",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__python_version }}"
        },
        {
          "name": "--implementation",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__implementation }}"
        },
        {
          "name": "--abi",
          "symbol": "WriteSpaceTab",
          "tip": "{{ $info.__abi }}"
        }
      ]
    },
    {
      "name": "help",
      "tip": "Show help for commands."
    },
    {
      "name": "completion",
      "tip": "A helper command used for command completion."
    }
  ],
  "options": [
    {
      "name": "--version",
      "alias": [
        "-V"
      ],
      "tip": "Show version and exit."
    }
  ],
  "common_options": [
    {
      "name": "-h",
      "alias": [
        "--help"
      ],
      "tip": [
        "U: -h|--help\n",
        "Show help."
      ]
    },
    {
      "name": "--debug",
      "tip": "Let unhandled exceptions propagate outside the main subroutine, instead of logging them to stderr."
    },
    {
      "name": "--isolated",
      "tip": "Run pip in an isolated mode, ignoring environment variables and user configuration."
    },
    {
      "name": "--require-virtualenv",
      "tip": "Allow pip to only run in a virtual environment; exit with an error otherwise."
    },
    {
      "name": "--python",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --python <python>\n",
        "pip with the specified Python interpreter."
      ]
    },
    {
      "name": "--verbose",
      "alias": [
        "-v"
      ],
      "tip": [
        "U: -v|--verbose\n",
        "Give more output. Option is additive, and can be used up to 3 times."
      ]
    },
    {
      "name": "--quiet",
      "alias": [
        "-q"
      ],
      "tip": [
        "U: -q|--quiet\n",
        "Give less output. Option is additive, and can be used up to 3 times.\n",
        "(corresponding to WARNING, ERROR, and CRITICAL logging levels)."
      ]
    },
    {
      "name": "--log",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --log <path>\n",
        "Path to a verbose appending log."
      ]
    },
    {
      "name": "--no-input",
      "tip": "Disable prompting for input."
    },
    {
      "name": "--proxy",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --proxy <proxy>\n",
        "Specify a proxy in the form [user:password@]proxy.server:port."
      ]
    },
    {
      "name": "--retries",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --retries <retries>\n",
        "Maximum number of retries each connection should attempt (default 5 times)."
      ]
    },
    {
      "name": "--timeout",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --timeout <timeout>\n",
        "Set the socket timeout (default 15 seconds)."
      ]
    },
    {
      "name": "--exists-action",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --exists-action <action>\n",
        "Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort."
      ]
    },
    {
      "name": "--trusted-host",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --trusted-host <hostname>\n",
        "Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS."
      ]
    },
    {
      "name": "--cert",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --cert <path>\n",
        "Path to PEM-encoded CA certificate bundle. If provided, overrides the default.\n",
        "See 'SSL Certificate Verification' in pip documentation for more information."
      ]
    },
    {
      "name": "--client-cert",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --client-cert <path>\n",
        "Path to SSL client certificate, a single file containing the private key and the certificate in PEM format."
      ]
    },
    {
      "name": "--cache-dir",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --cache-dir <dir>\n",
        "Store the cache data in <dir>."
      ]
    },
    {
      "name": "--no-cache-dir",
      "tip": "Disable the cache."
    },
    {
      "name": "--disable-pip-version-check",
      "tip": [
        "Don't periodically check PyPI to determine whether a new version of pip is available for download.\n",
        "Implied with --no-index."
      ]
    },
    {
      "name": "--no-color",
      "tip": "Suppress colored output."
    },
    {
      "name": "--no-python-version-warning",
      "tip": "Silence deprecation warnings for upcoming unsupported Pythons."
    },
    {
      "name": "--use-feature",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --use-feature <feature>\n",
        "Enable new functionality, that may be backward incompatible."
      ]
    },
    {
      "name": "--use-deprecated",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --use-deprecated <feature>\n",
        "Enable deprecated functionality, that will be removed in the future."
      ]
    }
  ],
  "info": {
    "completion_info": {
      "url": "https://github.com/pypa/pip",
      "description": "pip - Python Package Manager"
    },
    "__requirement": [
      "U: -r|--requirement <file>\n",
      "Use the order in the given requirements file and its comments when generating output.\n",
      "This option can be used multiple times."
    ],
    "__constraint": [
      "U: -c|--constraint <file>\n",
      "Constrain versions using the given constraints file. This option can be used multiple times."
    ],
    "__no_deps": "Don't install package dependencies.",
    "__pre": "Include pre-release and development versions. By default, pip only finds stable versions.",
    "__editable": [
      "U: -e|--editable <path|url>\n",
      "Install a project in editable mode(e.g. setuptools \"develop mode\") from a local project path or a VCS url"
    ],
    "__platform": [
      "U: --platform <platform>\n",
      "Only use wheels compatible with <platform>.\n",
      "Defaults to the platform of the running system.\n",
      "Use this option multiple times to specify multiple platforms supported by the target interpreter."
    ],
    "__python_version": [
      "U: --python-version <version>\n",
      "The Python interpreter version to use for wheel and \"Requires-Python\" compatibility checks.\n",
      "Defaults to a version derived from the running interpreter."
    ],
    "__implementation": [
      "U: --implementation <implementation>\n",
      "Only use wheels compatible with Python implementation <implementation>, e.g. 'pp', 'jy', 'cp',  or 'ip'.\n",
      "If not specified, then the current interpreter implementation is used. Use 'py' to force implementation-agnostic wheels."
    ],
    "__abi": [
      "U: --abi <abi>\n",
      "Only use wheels compatible with Python abi <abi>, e.g. 'pypy_41'. If not specified, then the current interpreter abi tag is used.",
      "Use this option multiple times to specify multiple abis supported by the target interpreter.\n",
      "Generally you will need to specify --implementation, --platform, and --python-version when using this option."
    ],
    "__root": [
      "U: --root <dir>\n",
      "Install everything relative to this alternate root directory."
    ],
    "__src": [
      "U: --src <dir>\n",
      "Directory to check out editable projects into.\n",
      "The default in a virtualenv is \"<venv path>/src\".\n",
      "The default for global installs is \"<current dir>/src\"."
    ],
    "__ignore_requires_python": "Ignore the Requires-Python information.",
    "__no_build_isolation": [
      "Disable isolation when building a modern source distribution.\n",
      "Build dependencies specified by PEP 518 must be already installed if this option is used."
    ],
    "__use_pep517": "Use PEP 517 for building source distributions (use --no-use-pep517 to force legacy behaviour).",
    "__check_build_dependencies": "Check the build dependencies when PEP517 is used.",
    "__config_settings": [
      "U: --config-setting <settings>\n",
      "Configuration settings to be passed to the PEP 517 build backend.\n",
      "Settings take the form KEY=VALUE.\n",
      "Use multiple --config-settings options to pass multiple keys to the backend."
    ],
    "__global_option": [
      "U: --global-option <options>\n",
      "Extra global options to be supplied to the setup.py call before the install or bdist_wheel command."
    ],
    "__no_binary": [
      "U: --no-binary <format_control>\n",
      "Do not use binary packages. Can be supplied multiple times, and each time adds to the existing value.\n",
      "Accepts either \":all:\" to disable all binary packages, \":none:\" to empty the set (notice the colons), or one or more package names with commas between them (no colons).\n",
      "Note that some packages are tricky to compile and may fail to install when this option is used on them."
    ],
    "__only_binary": [
      "U: --only-binary <format_control>\n",
      "Do not use source packages. Can be supplied multiple times, and each time adds to the existing value.\n",
      "Accepts either \":all:\" to disable all source packages, \":none:\" to empty the set, or one or more package names with commas between them.\n",
      "Packages without binary distributions will fail to install when this option is used on them."
    ],
    "__prefer_binary": "Prefer older binary packages over newer source packages.",
    "__require_hashes": [
      "Require a hash to check each requirement against, for repeatable installs.\n",
      "This option is implied when any package in a requirements file has a --hash option."
    ],
    "__progress_bar": [
      "U: --progress-bar <bar>\n",
      "Specify whether the progress bar should be used [on, off] (default: on)"
    ],
    "__root_user_action": [
      "U: --root-user-action <root_user_action>\n",
      "Action if pip is run as a root user.\n",
      "By default, a warning message is shown."
    ],
    "__report": [
      "U: --report <file>\n",
      "Generate a JSON file describing what pip did to install the provided requirements.\n",
      "Can be used in combination with --dry-run and --ignore-installed to 'resolve' the requirements.\n",
      "When - is used as file name it writes to stdout.When writing to stdout, please combine with the --quiet option to avoid mixing pip logging output with JSON output."
    ],
    "__no_clean": "Don't clean up build directories.",
    "__index_url": [
      "Base URL of the Python Package Index (default https://pypi.org/simple).\n",
      "This should point to a repository compliant with PEP 503 (the simple repository API) or a local directory laid out in the same format."
    ],
    "__extra_index_url": [
      "U: --extra-index-url <url>\n",
      "Extra URLs of package indexes to use in addition to --index-url.\nShould follow the same rules as --index-url."
    ],
    "__no_index": "Ignore package index (only looking at --find-links URLs instead).",
    "__find_links": [
      "If a URL or path to an html file, then parse for links to archives such as sdist (.tar.gz) or wheel (.whl) files.\n",
      "If a local path or file:// URL that's a directory, then look for archives in the directory listing.\n",
      "Links to VCS project URLs are not supported."
    ],
    "__local": [
      "U: -l|--local\n",
      "If in a virtualenv that has global access, do not list globally-installed packages."
    ],
    "__user": "Only output packages installed in user-site.",
    "__path": [
      "U: --path <path>\n",
      "Restrict to the specified installation path for listing packages (can be used multiple times)."
    ],
    "__exclude_editable": "Exclude editable package from output.",
    "__exclude": [
      "U: --exclude <package>\n",
      "Exclude specified package from the output."
    ]
  }
}
