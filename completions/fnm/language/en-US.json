{
  "root": [
    {
      "name": "list-remote",
      "alias": [
        "ls-remote"
      ],
      "tip": "List all remote Node.js versions"
    },
    {
      "name": "list",
      "alias": [
        "ls"
      ],
      "tip": "List all locally installed Node.js versions"
    },
    {
      "name": "install",
      "tip": "Install a new Node.js version"
    },
    {
      "name": "use",
      "tip": "Change Node.js version"
    },
    {
      "name": "env",
      "tip": "Print and set up required environment variables for fnm"
    },
    {
      "name": "completions",
      "tip": "Print shell completions to stdout"
    },
    {
      "name": "alias",
      "tip": "Alias a version to a common name"
    },
    {
      "name": "unalias",
      "tip": "Remove an alias definition"
    },
    {
      "name": "default",
      "tip": "Set a version as the default version"
    },
    {
      "name": "current",
      "tip": "Print the current Node.js version"
    },
    {
      "name": "exec",
      "tip": "Run a command within fnm context"
    },
    {
      "name": "uninstall",
      "tip": "Uninstall a Node.js version"
    },
    {
      "name": "help",
      "tip": "Print this message or the help of the given subcommand(s)"
    }
  ],
  "options": [
    {
      "name": "--version",
      "alias": [
        "-V"
      ],
      "tip": "Show the version."
    }
  ],
  "common_options": [
    {
      "name": "--node-dist-mirror",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --node-dist-mirror <NODE_DIST_MIRROR>\n",
        "Set the mirror URL for downloading Node.js dist.\n",
        "Default: https://nodejs.org/dist"
      ]
    },
    {
      "name": "--fnm-dir",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --fnm-dir <BASE_DIR>\n",
        "The root directory of fnm installations."
      ]
    },
    {
      "name": "--log-level",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --log-level <LOG_LEVEL>\n",
        "The log level of fnm commands.\n",
        "Default: info"
      ],
      "next": [
        {
          "name": "quiet"
        },
        {
          "name": "error"
        },
        {
          "name": "info"
        }
      ]
    },
    {
      "name": "--arch",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --arch <ARCH>\n",
        "Override the architecture of the installed Node binary.\n",
        "Defaults to arch of fnm binary"
      ]
    },
    {
      "name": "--version-file-strategy",
      "symbol": "WriteSpaceTab",
      "tip": [
        "U: --version-file-strategy <VERSION_FILE_STRATEGY>\n",
        "A strategy for how to resolve the Node version.\n",
        "Used whenever `fnm use` or `fnm install` is called without a version, or when `--use-on-cd` is configured on evaluation.\n",
        "Default: local"
      ],
      "next": [
        {
          "name": "local",
          "tip": "Use the local version of Node defined within the current directory"
        },
        {
          "name": "recursive",
          "tip": "Use the version of Node defined within the current directory and all parent directories"
        }
      ]
    },
    {
      "name": "--corepack-enabled",
      "tip": [
        " Enable corepack support for each new installation.\n",
        "This will make fnm call `corepack enable` on every Node.js installation.\n",
        "For more information about corepack see <https://nodejs.org/api/corepack.html>"
      ]
    },
    {
      "name": "--resolve-engines",
      "tip": [
        "Resolve `engines.node` field in `package.json` whenever a `.node-version` or `.nvmrc` file is not present.\n",
        "Experimental: This feature is subject to change.\n",
        "Note: `engines.node` can be any semver range, with the latest satisfying version being resolved."
      ]
    },
    {
      "name": "--help",
      "alias": [
        "-h"
      ],
      "tip": "Show help."
    }
  ],
  "info": {
    "completion_info": {
      "url": "https://github.com/Schniz/fnm",
      "description": "Fast and simple Node.js version manager, built in Rust."
    }
  }
}
