name: Sync GitHub to Gitee

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - "Update Content"
    types: [completed]

jobs:
  sync-repos:
    runs-on: windows-latest
    env:
      REPO: ${{ github.repository }}
      USER_NAME: "abgox"
      USER_EMAIL: "abgohxf@outlook.com"
    steps:
      - name: Setup SSH
        shell: pwsh
        env:
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
          SSH_ID_RSA_GITHUB: ${{ secrets.SSH_ID_RSA_GITHUB }}
          SSH_ID_RSA_GITEE: ${{ secrets.SSH_ID_RSA_GITEE }}
        run: |
          # Create secure directory
          $sshDir = "$HOME\.ssh"
          New-Item -Path $sshDir -ItemType Directory -Force
          attrib +h $sshDir

          # Write key files
          $env:SSH_CONFIG | Out-File "$sshDir\config" -Encoding utf8NoBOM
          $env:SSH_ID_RSA_GITHUB | Out-File "$sshDir\id_rsa_github" -Encoding utf8NoBOM
          $env:SSH_ID_RSA_GITEE | Out-File "$sshDir\id_rsa_gitee" -Encoding utf8NoBOM

          # Set strict permissions
          icacls "$sshDir\id_rsa_github" /reset /grant:r "$env:USERNAME`:F" /inheritance:r
          icacls "$sshDir\id_rsa_gitee" /reset /grant:r "$env:USERNAME`:F" /inheritance:r

          # Add host fingerprints to known_hosts
          ssh-keyscan github.com gitee.com >> "$sshDir\known_hosts"

      - name: Configure Git
        shell: pwsh
        run: |
          git config --global user.name $env:USER_NAME
          git config --global user.email $env:USER_EMAIL

      - name: Verify SSH
        shell: pwsh
        run: |
          # ssh -T git@github.com
          ssh -T git@gitee.com

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Push to Gitee
        shell: pwsh
        run: |
          $repo = $env:REPO
          git remote add gitee "git@gitee.com:$repo.git"
          git push gitee --force
          git push gitee --tags --force

          git checkout dev
          git push gitee dev --force
          git push gitee dev --tags --force

      - name: Cleanup SSH
        if: always()
        shell: pwsh
        run: |
          Remove-Item "$HOME\.ssh" -Recurse -Force -ErrorAction SilentlyContinue
